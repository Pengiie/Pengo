#pragma once
#include "../tokenizer/Token.h"
#include <vector>
#include <stack>
#include <queue>
#include <unordered_map>
#include <iostream>
#include <algorithm>
#define SET_NUM 85
#define GRAMMAR_NUM 55
enum class NodeType
{
	File,
	IfStatement,
	Term,
	WhileStatement,
	Arguments,
	Statements,
	Block,
	Statement,
	VarDeclareStatement,
	ElseIfStatement,
	ElseStatement,
	Expression,
	Logical,
	LogicalOp,
	Conditional,
	Grouping,
	ConditionalOp,
	TermOp,
	Factor,
	FactorOp,
	Unary,
	UnaryOp,
	Call,
	ArgRecurse,
	Primary,
	Literal,
	Identifier,
};
struct Node
{
	NodeType type;
	bool terminal = false;
	Token token;
	std::vector<Node> children;
};
enum class ActionType
{
	None,
	Shift,
	Reduce,
	Accept
};
struct Action
{
	ActionType type = ActionType::None;
	int value = -1;
};
struct Production
{
	NodeType lhs;
	int rhs = 0;
	int rhsNodes = 0;
	bool terminates = false;
};
class Parser
{
public:
	Parser()
	{
		m_actionTable[64][TokenType::RightParen] = { ActionType::Shift, 74 };
		m_actionTable[0][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[0][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[0][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[0][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[0][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[0][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[0][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[0][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[0][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[0][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[0][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[0][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[67][TokenType::OrOr] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::AndAnd] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::Asterisk] = { ActionType::Shift, 36 };
		m_actionTable[67][TokenType::Slash] = { ActionType::Shift, 37 };
		m_actionTable[67][TokenType::Semicolon] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::LessThanEqual] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::LessThan] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::NotEqual] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::GreaterThanEqual] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::GreaterThan] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::EqualEqual] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::RightParen] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::Minus] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::Plus] = { ActionType::Reduce, 30 };
		m_actionTable[67][TokenType::Comma] = { ActionType::Reduce, 30 };
		m_actionTable[3][TokenType::Equal] = { ActionType::Shift, 34 };
		m_actionTable[3][TokenType::Semicolon] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::LessThanEqual] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::OrOr] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::AndAnd] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::LessThan] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::NotEqual] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::GreaterThanEqual] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::GreaterThan] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::EqualEqual] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::Minus] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::Plus] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::Slash] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::Asterisk] = { ActionType::Reduce, 48 };
		m_actionTable[3][TokenType::LeftParen] = { ActionType::Reduce, 48 };
		m_actionTable[68][TokenType::Minus] = { ActionType::Shift, 42 };
		m_actionTable[68][TokenType::Semicolon] = { ActionType::Reduce, 22 };
		m_actionTable[68][TokenType::Plus] = { ActionType::Shift, 46 };
		m_actionTable[68][TokenType::Comma] = { ActionType::Reduce, 22 };
		m_actionTable[68][TokenType::RightParen] = { ActionType::Reduce, 22 };
		m_actionTable[68][TokenType::AndAnd] = { ActionType::Reduce, 22 };
		m_actionTable[68][TokenType::OrOr] = { ActionType::Reduce, 22 };
		m_actionTable[4][TokenType::OrOr] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::AndAnd] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::Asterisk] = { ActionType::Shift, 36 };
		m_actionTable[4][TokenType::Slash] = { ActionType::Shift, 37 };
		m_actionTable[4][TokenType::Semicolon] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::LessThanEqual] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::LessThan] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::NotEqual] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::GreaterThanEqual] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::GreaterThan] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::EqualEqual] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::RightParen] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::Minus] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::Plus] = { ActionType::Reduce, 31 };
		m_actionTable[4][TokenType::Comma] = { ActionType::Reduce, 31 };
		m_actionTable[13][TokenType::Minus] = { ActionType::Shift, 42 };
		m_actionTable[13][TokenType::GreaterThanEqual] = { ActionType::Shift, 44 };
		m_actionTable[13][TokenType::LessThanEqual] = { ActionType::Shift, 51 };
		m_actionTable[13][TokenType::Plus] = { ActionType::Shift, 46 };
		m_actionTable[13][TokenType::EqualEqual] = { ActionType::Shift, 47 };
		m_actionTable[13][TokenType::LessThan] = { ActionType::Shift, 50 };
		m_actionTable[13][TokenType::NotEqual] = { ActionType::Shift, 48 };
		m_actionTable[13][TokenType::GreaterThan] = { ActionType::Shift, 49 };
		m_actionTable[13][TokenType::Comma] = { ActionType::Reduce, 23 };
		m_actionTable[13][TokenType::RightParen] = { ActionType::Reduce, 23 };
		m_actionTable[13][TokenType::Semicolon] = { ActionType::Reduce, 23 };
		m_actionTable[13][TokenType::OrOr] = { ActionType::Reduce, 23 };
		m_actionTable[13][TokenType::AndAnd] = { ActionType::Reduce, 23 };
		m_actionTable[5][TokenType::LeftParen] = { ActionType::Shift, 38 };
		m_actionTable[70][TokenType::RightParen] = { ActionType::Shift, 77 };
		m_actionTable[6][TokenType::LeftParen] = { ActionType::Shift, 39 };
		m_actionTable[9][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[9][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[9][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[9][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[9][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[9][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[9][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[9][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[9][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[9][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[9][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[9][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[74][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[74][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[74][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[74][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[74][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[74][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[74][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[74][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[74][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[74][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[74][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[74][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[10][TokenType::LeftParen] = { ActionType::Shift, 41 };
		m_actionTable[14][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[14][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[14][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[14][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[14][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[14][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[14][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[18][TokenType::LeftParen] = { ActionType::Shift, 54 };
		m_actionTable[18][TokenType::Semicolon] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::LessThanEqual] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::OrOr] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::AndAnd] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::LessThan] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::NotEqual] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::GreaterThanEqual] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::GreaterThan] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::EqualEqual] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::RightParen] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::Minus] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::Plus] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::Comma] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::Slash] = { ActionType::Reduce, 43 };
		m_actionTable[18][TokenType::Asterisk] = { ActionType::Reduce, 43 };
		m_actionTable[20][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[20][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[20][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[20][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[20][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[20][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[20][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[24][TokenType::AndAnd] = { ActionType::Shift, 58 };
		m_actionTable[24][TokenType::OrOr] = { ActionType::Shift, 57 };
		m_actionTable[24][TokenType::Comma] = { ActionType::Reduce, 17 };
		m_actionTable[24][TokenType::RightParen] = { ActionType::Reduce, 17 };
		m_actionTable[24][TokenType::Semicolon] = { ActionType::Reduce, 17 };
		m_actionTable[27][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[27][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[27][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[27][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[27][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[27][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[27][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[27][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[27][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[27][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[27][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[27][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[28][TokenType::Semicolon] = { ActionType::Shift, 60 };
		m_actionTable[33][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[33][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[33][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[33][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[33][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[33][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[33][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[33][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[33][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[33][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[33][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[33][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[33][TokenType::_EOF] = { ActionType::Reduce, 1 };
		m_actionTable[34][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[34][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[34][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[34][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[34][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[34][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[34][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[35][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[35][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[35][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[35][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[35][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[35][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[35][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[38][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[38][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[38][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[38][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[38][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[38][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[38][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[39][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[39][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[39][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[39][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[39][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[39][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[39][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[41][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[41][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[41][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[41][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[41][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[41][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[41][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[43][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[43][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[43][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[43][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[43][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[43][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[43][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[45][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[45][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[45][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[45][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[45][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[45][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[45][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[52][TokenType::RightParen] = { ActionType::Shift, 69 };
		m_actionTable[54][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[54][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[54][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[54][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[54][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[54][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[54][TokenType::RightParen] = { ActionType::Reduce, 44 };
		m_actionTable[54][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[56][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[56][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[56][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[56][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[56][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[56][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[56][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[59][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[59][TokenType::RightCurly] = { ActionType::Shift, 73 };
		m_actionTable[59][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[59][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[59][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[59][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[59][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[59][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[59][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[59][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[59][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[59][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[59][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[1][TokenType::_EOF] = { ActionType::Accept }; ;
		m_actionTable[65][TokenType::RightParen] = { ActionType::Shift, 75 };
		m_actionTable[2][TokenType::Comma] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::LessThan] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Semicolon] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::LessThanEqual] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::OrOr] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::AndAnd] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::GreaterThanEqual] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::GreaterThan] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::NotEqual] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::EqualEqual] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::RightParen] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Slash] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Asterisk] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::LeftParen] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Minus] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Plus] = { ActionType::Reduce, 54 };
		m_actionTable[2][TokenType::Equal] = { ActionType::Reduce, 54 };
		m_actionTable[66][TokenType::RightParen] = { ActionType::Shift, 76 };
		m_actionTable[7][TokenType::Semicolon] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::LessThanEqual] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::OrOr] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::AndAnd] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::LessThan] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::NotEqual] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::GreaterThanEqual] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::GreaterThan] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::EqualEqual] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::RightParen] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::Minus] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::Plus] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::Comma] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::Slash] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::Asterisk] = { ActionType::Reduce, 53 };
		m_actionTable[7][TokenType::LeftParen] = { ActionType::Reduce, 53 };
		m_actionTable[71][TokenType::Comma] = { ActionType::Shift, 79 };
		m_actionTable[71][TokenType::RightParen] = { ActionType::Reduce, 46 };
		m_actionTable[11][TokenType::Semicolon] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::LessThanEqual] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::OrOr] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::AndAnd] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::LessThan] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::NotEqual] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::GreaterThanEqual] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::GreaterThan] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::EqualEqual] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::RightParen] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::Minus] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::Plus] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::Comma] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::Slash] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::Asterisk] = { ActionType::Reduce, 55 };
		m_actionTable[11][TokenType::LeftParen] = { ActionType::Reduce, 55 };
		m_actionTable[75][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[75][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[75][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[75][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[75][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[75][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[75][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[75][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[75][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[75][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[75][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[75][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[12][TokenType::RightCurly] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Else] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::_EOF] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::While] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::If] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Identifier] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::ElseIf] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Bool] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::String] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Number] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::LeftParen] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Bang] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::Minus] = { ActionType::Reduce, 9 };
		m_actionTable[12][TokenType::LeftCurly] = { ActionType::Reduce, 9 };
		m_actionTable[76][TokenType::While] = { ActionType::Shift, 6 };
		m_actionTable[76][TokenType::If] = { ActionType::Shift, 5 };
		m_actionTable[76][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[76][TokenType::Else] = { ActionType::Shift, 9 };
		m_actionTable[76][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[76][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[76][TokenType::ElseIf] = { ActionType::Shift, 10 };
		m_actionTable[76][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[76][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[76][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[76][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[76][TokenType::LeftCurly] = { ActionType::Shift, 27 };
		m_actionTable[15][TokenType::Bool] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::Minus] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::Number] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::String] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::LeftParen] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::Identifier] = { ActionType::Reduce, 41 };
		m_actionTable[15][TokenType::Bang] = { ActionType::Reduce, 41 };
		m_actionTable[79][TokenType::Minus] = { ActionType::Shift, 19 };
		m_actionTable[79][TokenType::Number] = { ActionType::Shift, 8 };
		m_actionTable[79][TokenType::String] = { ActionType::Shift, 7 };
		m_actionTable[79][TokenType::Bool] = { ActionType::Shift, 11 };
		m_actionTable[79][TokenType::LeftParen] = { ActionType::Shift, 14 };
		m_actionTable[79][TokenType::Identifier] = { ActionType::Shift, 2 };
		m_actionTable[79][TokenType::Bang] = { ActionType::Shift, 15 };
		m_actionTable[19][TokenType::Bool] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::Minus] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::Number] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::String] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::LeftParen] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::Identifier] = { ActionType::Reduce, 40 };
		m_actionTable[19][TokenType::Bang] = { ActionType::Reduce, 40 };
		m_actionTable[83][TokenType::Comma] = { ActionType::Shift, 79 };
		m_actionTable[83][TokenType::RightParen] = { ActionType::Reduce, 46 };
		m_actionTable[8][TokenType::Semicolon] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::LessThanEqual] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::OrOr] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::AndAnd] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::LessThan] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::NotEqual] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::GreaterThanEqual] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::GreaterThan] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::EqualEqual] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::RightParen] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::Minus] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::Plus] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::Comma] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::Slash] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::Asterisk] = { ActionType::Reduce, 52 };
		m_actionTable[8][TokenType::LeftParen] = { ActionType::Reduce, 52 };
		m_actionTable[16][TokenType::Semicolon] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::LessThanEqual] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::OrOr] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::AndAnd] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::LessThan] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::NotEqual] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::GreaterThanEqual] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::GreaterThan] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::EqualEqual] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::RightParen] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::Minus] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::Plus] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::Comma] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::Slash] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::Asterisk] = { ActionType::Reduce, 49 };
		m_actionTable[16][TokenType::LeftParen] = { ActionType::Reduce, 49 };
		m_actionTable[17][TokenType::Semicolon] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::LessThanEqual] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::OrOr] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::AndAnd] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::LessThan] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::NotEqual] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::GreaterThanEqual] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::GreaterThan] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::EqualEqual] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::RightParen] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::Minus] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::Plus] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::Comma] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::Slash] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::Asterisk] = { ActionType::Reduce, 50 };
		m_actionTable[17][TokenType::LeftParen] = { ActionType::Reduce, 50 };
		m_actionTable[21][TokenType::Semicolon] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::LessThanEqual] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::OrOr] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::AndAnd] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::LessThan] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::NotEqual] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::GreaterThanEqual] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::GreaterThan] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::EqualEqual] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::RightParen] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::Minus] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::Plus] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::Comma] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::Slash] = { ActionType::Reduce, 39 };
		m_actionTable[21][TokenType::Asterisk] = { ActionType::Reduce, 39 };
		m_actionTable[22][TokenType::Semicolon] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::LessThanEqual] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::OrOr] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::AndAnd] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::LessThan] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::NotEqual] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::GreaterThanEqual] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::GreaterThan] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::EqualEqual] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::RightParen] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::Minus] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::Plus] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::Comma] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::Slash] = { ActionType::Reduce, 35 };
		m_actionTable[22][TokenType::Asterisk] = { ActionType::Reduce, 35 };
		m_actionTable[23][TokenType::Comma] = { ActionType::Reduce, 19 };
		m_actionTable[23][TokenType::RightParen] = { ActionType::Reduce, 19 };
		m_actionTable[23][TokenType::Semicolon] = { ActionType::Reduce, 19 };
		m_actionTable[23][TokenType::AndAnd] = { ActionType::Reduce, 19 };
		m_actionTable[23][TokenType::OrOr] = { ActionType::Reduce, 19 };
		m_actionTable[25][TokenType::Semicolon] = { ActionType::Reduce, 10 };
		m_actionTable[26][TokenType::Semicolon] = { ActionType::Reduce, 11 };
		m_actionTable[29][TokenType::RightCurly] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Else] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::_EOF] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::While] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::If] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Identifier] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::ElseIf] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Bool] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::String] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Number] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::LeftParen] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Bang] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::Minus] = { ActionType::Reduce, 6 };
		m_actionTable[29][TokenType::LeftCurly] = { ActionType::Reduce, 6 };
		m_actionTable[30][TokenType::RightCurly] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Else] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::_EOF] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::While] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::If] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Identifier] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::ElseIf] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Bool] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::String] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Number] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::LeftParen] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Bang] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::Minus] = { ActionType::Reduce, 7 };
		m_actionTable[30][TokenType::LeftCurly] = { ActionType::Reduce, 7 };
		m_actionTable[31][TokenType::RightCurly] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Else] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::_EOF] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::While] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::If] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Identifier] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::ElseIf] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Bool] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::String] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Number] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::LeftParen] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Bang] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::Minus] = { ActionType::Reduce, 8 };
		m_actionTable[31][TokenType::LeftCurly] = { ActionType::Reduce, 8 };
		m_actionTable[32][TokenType::RightCurly] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Else] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::_EOF] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::While] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::If] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Identifier] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::ElseIf] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Bool] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::String] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Number] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::LeftParen] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Bang] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::Minus] = { ActionType::Reduce, 3 };
		m_actionTable[32][TokenType::LeftCurly] = { ActionType::Reduce, 3 };
		m_actionTable[36][TokenType::Bool] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::Minus] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::Number] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::String] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::LeftParen] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::Identifier] = { ActionType::Reduce, 36 };
		m_actionTable[36][TokenType::Bang] = { ActionType::Reduce, 36 };
		m_actionTable[37][TokenType::Bool] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::Minus] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::Number] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::String] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::LeftParen] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::Identifier] = { ActionType::Reduce, 37 };
		m_actionTable[37][TokenType::Bang] = { ActionType::Reduce, 37 };
		m_actionTable[40][TokenType::RightCurly] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Else] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::_EOF] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::While] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::If] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Identifier] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::ElseIf] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Bool] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::String] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Number] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::LeftParen] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Bang] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::Minus] = { ActionType::Reduce, 16 };
		m_actionTable[40][TokenType::LeftCurly] = { ActionType::Reduce, 16 };
		m_actionTable[42][TokenType::Bool] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::Minus] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::Number] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::String] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::LeftParen] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::Identifier] = { ActionType::Reduce, 33 };
		m_actionTable[42][TokenType::Bang] = { ActionType::Reduce, 33 };
		m_actionTable[44][TokenType::Bool] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::Minus] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::Number] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::String] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::LeftParen] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::Identifier] = { ActionType::Reduce, 27 };
		m_actionTable[44][TokenType::Bang] = { ActionType::Reduce, 27 };
		m_actionTable[46][TokenType::Bool] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::Minus] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::Number] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::String] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::LeftParen] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::Identifier] = { ActionType::Reduce, 32 };
		m_actionTable[46][TokenType::Bang] = { ActionType::Reduce, 32 };
		m_actionTable[47][TokenType::Bool] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::Minus] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::Number] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::String] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::LeftParen] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::Identifier] = { ActionType::Reduce, 24 };
		m_actionTable[47][TokenType::Bang] = { ActionType::Reduce, 24 };
		m_actionTable[48][TokenType::Bool] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::Minus] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::Number] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::String] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::LeftParen] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::Identifier] = { ActionType::Reduce, 25 };
		m_actionTable[48][TokenType::Bang] = { ActionType::Reduce, 25 };
		m_actionTable[49][TokenType::Bool] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::Minus] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::Number] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::String] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::LeftParen] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::Identifier] = { ActionType::Reduce, 26 };
		m_actionTable[49][TokenType::Bang] = { ActionType::Reduce, 26 };
		m_actionTable[50][TokenType::Bool] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::Minus] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::Number] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::String] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::LeftParen] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::Identifier] = { ActionType::Reduce, 28 };
		m_actionTable[50][TokenType::Bang] = { ActionType::Reduce, 28 };
		m_actionTable[51][TokenType::Bool] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::Minus] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::Number] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::String] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::LeftParen] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::Identifier] = { ActionType::Reduce, 29 };
		m_actionTable[51][TokenType::Bang] = { ActionType::Reduce, 29 };
		m_actionTable[53][TokenType::Semicolon] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::LessThanEqual] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::OrOr] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::AndAnd] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::RightParen] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::GreaterThanEqual] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::LessThan] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::GreaterThan] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::NotEqual] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::EqualEqual] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::Minus] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::Plus] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::Comma] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::Slash] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::Asterisk] = { ActionType::Reduce, 48 };
		m_actionTable[53][TokenType::LeftParen] = { ActionType::Reduce, 48 };
		m_actionTable[55][TokenType::Semicolon] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::LessThanEqual] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::OrOr] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::AndAnd] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::RightParen] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::GreaterThanEqual] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::LessThan] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::GreaterThan] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::NotEqual] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::EqualEqual] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::Minus] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::Plus] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::Comma] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::Slash] = { ActionType::Reduce, 38 };
		m_actionTable[55][TokenType::Asterisk] = { ActionType::Reduce, 38 };
		m_actionTable[57][TokenType::Bool] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::Minus] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::Number] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::String] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::LeftParen] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::Identifier] = { ActionType::Reduce, 21 };
		m_actionTable[57][TokenType::Bang] = { ActionType::Reduce, 21 };
		m_actionTable[58][TokenType::Bool] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::Minus] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::Number] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::String] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::LeftParen] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::Identifier] = { ActionType::Reduce, 20 };
		m_actionTable[58][TokenType::Bang] = { ActionType::Reduce, 20 };
		m_actionTable[60][TokenType::RightCurly] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Else] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::_EOF] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::While] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::If] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Identifier] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::ElseIf] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Bool] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::String] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Number] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::LeftParen] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Bang] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::Minus] = { ActionType::Reduce, 5 };
		m_actionTable[60][TokenType::LeftCurly] = { ActionType::Reduce, 5 };
		m_actionTable[61][TokenType::RightCurly] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Else] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::_EOF] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::While] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::If] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Identifier] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::ElseIf] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Bool] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::String] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Number] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::LeftParen] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Bang] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::Minus] = { ActionType::Reduce, 2 };
		m_actionTable[61][TokenType::LeftCurly] = { ActionType::Reduce, 2 };
		m_actionTable[62][TokenType::Semicolon] = { ActionType::Reduce, 12 };
		m_actionTable[63][TokenType::Semicolon] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::LessThanEqual] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::OrOr] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::AndAnd] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::LessThan] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::NotEqual] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::GreaterThanEqual] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::GreaterThan] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::EqualEqual] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::RightParen] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::Minus] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::Plus] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::Comma] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::Slash] = { ActionType::Reduce, 34 };
		m_actionTable[63][TokenType::Asterisk] = { ActionType::Reduce, 34 };
		m_actionTable[69][TokenType::Semicolon] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::LessThanEqual] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::OrOr] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::AndAnd] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::LessThan] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::NotEqual] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::GreaterThanEqual] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::GreaterThan] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::EqualEqual] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::RightParen] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::Minus] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::Plus] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::Comma] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::Slash] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::Asterisk] = { ActionType::Reduce, 51 };
		m_actionTable[69][TokenType::LeftParen] = { ActionType::Reduce, 51 };
		m_actionTable[72][TokenType::Comma] = { ActionType::Reduce, 18 };
		m_actionTable[72][TokenType::RightParen] = { ActionType::Reduce, 18 };
		m_actionTable[72][TokenType::Semicolon] = { ActionType::Reduce, 18 };
		m_actionTable[72][TokenType::AndAnd] = { ActionType::Reduce, 18 };
		m_actionTable[72][TokenType::OrOr] = { ActionType::Reduce, 18 };
		m_actionTable[73][TokenType::RightCurly] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Else] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::_EOF] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::While] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::If] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Identifier] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::ElseIf] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Bool] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::String] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Number] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::LeftParen] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Bang] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::Minus] = { ActionType::Reduce, 4 };
		m_actionTable[73][TokenType::LeftCurly] = { ActionType::Reduce, 4 };
		m_actionTable[77][TokenType::Semicolon] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::LessThanEqual] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::OrOr] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::AndAnd] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::RightParen] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::GreaterThanEqual] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::LessThan] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::GreaterThan] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::NotEqual] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::EqualEqual] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::Minus] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::Plus] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::Comma] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::Slash] = { ActionType::Reduce, 42 };
		m_actionTable[77][TokenType::Asterisk] = { ActionType::Reduce, 42 };
		m_actionTable[78][TokenType::RightParen] = { ActionType::Reduce, 45 };
		m_actionTable[80][TokenType::RightCurly] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Else] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::_EOF] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::While] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::If] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Identifier] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::ElseIf] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Bool] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::String] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Number] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::LeftParen] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Bang] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::Minus] = { ActionType::Reduce, 14 };
		m_actionTable[80][TokenType::LeftCurly] = { ActionType::Reduce, 14 };
		m_actionTable[81][TokenType::RightCurly] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Else] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::_EOF] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::While] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::If] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Identifier] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::ElseIf] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Bool] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::String] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Number] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::LeftParen] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Bang] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::Minus] = { ActionType::Reduce, 13 };
		m_actionTable[81][TokenType::LeftCurly] = { ActionType::Reduce, 13 };
		m_actionTable[82][TokenType::RightCurly] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Else] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::_EOF] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::While] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::If] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Identifier] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::ElseIf] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Bool] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::String] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Number] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::LeftParen] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Bang] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::Minus] = { ActionType::Reduce, 15 };
		m_actionTable[82][TokenType::LeftCurly] = { ActionType::Reduce, 15 };
		m_actionTable[84][TokenType::RightParen] = { ActionType::Reduce, 47 };
		m_gotoTable[24][NodeType::LogicalOp] = 56;
		m_gotoTable[0][NodeType::File] = 1;
		m_gotoTable[0][NodeType::Factor] = 4;
		m_gotoTable[0][NodeType::Identifier] = 3;
		m_gotoTable[0][NodeType::WhileStatement] = 12;
		m_gotoTable[0][NodeType::Term] = 13;
		m_gotoTable[0][NodeType::Literal] = 17;
		m_gotoTable[0][NodeType::Grouping] = 16;
		m_gotoTable[0][NodeType::Primary] = 18;
		m_gotoTable[0][NodeType::UnaryOp] = 20;
		m_gotoTable[0][NodeType::Call] = 21;
		m_gotoTable[0][NodeType::Unary] = 22;
		m_gotoTable[0][NodeType::Conditional] = 23;
		m_gotoTable[0][NodeType::Logical] = 24;
		m_gotoTable[0][NodeType::Expression] = 25;
		m_gotoTable[0][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[0][NodeType::Statement] = 28;
		m_gotoTable[0][NodeType::IfStatement] = 29;
		m_gotoTable[0][NodeType::ElseIfStatement] = 30;
		m_gotoTable[0][NodeType::ElseStatement] = 31;
		m_gotoTable[0][NodeType::Block] = 32;
		m_gotoTable[0][NodeType::Statements] = 33;
		m_gotoTable[20][NodeType::Unary] = 55;
		m_gotoTable[20][NodeType::Identifier] = 53;
		m_gotoTable[20][NodeType::Literal] = 17;
		m_gotoTable[20][NodeType::Grouping] = 16;
		m_gotoTable[20][NodeType::Call] = 21;
		m_gotoTable[20][NodeType::Primary] = 18;
		m_gotoTable[20][NodeType::UnaryOp] = 20;
		m_gotoTable[68][NodeType::TermOp] = 43;
		m_gotoTable[4][NodeType::FactorOp] = 35;
		m_gotoTable[9][NodeType::Block] = 40;
		m_gotoTable[9][NodeType::Factor] = 4;
		m_gotoTable[9][NodeType::Identifier] = 3;
		m_gotoTable[9][NodeType::WhileStatement] = 12;
		m_gotoTable[9][NodeType::Term] = 13;
		m_gotoTable[9][NodeType::Literal] = 17;
		m_gotoTable[9][NodeType::Grouping] = 16;
		m_gotoTable[9][NodeType::Primary] = 18;
		m_gotoTable[9][NodeType::UnaryOp] = 20;
		m_gotoTable[9][NodeType::Call] = 21;
		m_gotoTable[9][NodeType::Unary] = 22;
		m_gotoTable[9][NodeType::Conditional] = 23;
		m_gotoTable[9][NodeType::Logical] = 24;
		m_gotoTable[9][NodeType::Expression] = 25;
		m_gotoTable[9][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[9][NodeType::Statement] = 28;
		m_gotoTable[9][NodeType::IfStatement] = 29;
		m_gotoTable[9][NodeType::ElseIfStatement] = 30;
		m_gotoTable[9][NodeType::ElseStatement] = 31;
		m_gotoTable[13][NodeType::TermOp] = 43;
		m_gotoTable[13][NodeType::ConditionalOp] = 45;
		m_gotoTable[14][NodeType::Expression] = 52;
		m_gotoTable[14][NodeType::UnaryOp] = 20;
		m_gotoTable[14][NodeType::Term] = 13;
		m_gotoTable[14][NodeType::Identifier] = 53;
		m_gotoTable[14][NodeType::Literal] = 17;
		m_gotoTable[14][NodeType::Grouping] = 16;
		m_gotoTable[14][NodeType::Call] = 21;
		m_gotoTable[14][NodeType::Primary] = 18;
		m_gotoTable[14][NodeType::Unary] = 22;
		m_gotoTable[14][NodeType::Factor] = 4;
		m_gotoTable[14][NodeType::Conditional] = 23;
		m_gotoTable[14][NodeType::Logical] = 24;
		m_gotoTable[27][NodeType::WhileStatement] = 12;
		m_gotoTable[27][NodeType::Term] = 13;
		m_gotoTable[27][NodeType::Statements] = 59;
		m_gotoTable[27][NodeType::Factor] = 4;
		m_gotoTable[27][NodeType::Identifier] = 3;
		m_gotoTable[27][NodeType::Literal] = 17;
		m_gotoTable[27][NodeType::Grouping] = 16;
		m_gotoTable[27][NodeType::Primary] = 18;
		m_gotoTable[27][NodeType::UnaryOp] = 20;
		m_gotoTable[27][NodeType::Call] = 21;
		m_gotoTable[27][NodeType::Unary] = 22;
		m_gotoTable[27][NodeType::Conditional] = 23;
		m_gotoTable[27][NodeType::Logical] = 24;
		m_gotoTable[27][NodeType::Expression] = 25;
		m_gotoTable[27][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[27][NodeType::Statement] = 28;
		m_gotoTable[27][NodeType::IfStatement] = 29;
		m_gotoTable[27][NodeType::ElseIfStatement] = 30;
		m_gotoTable[27][NodeType::ElseStatement] = 31;
		m_gotoTable[27][NodeType::Block] = 32;
		m_gotoTable[33][NodeType::Block] = 61;
		m_gotoTable[33][NodeType::Factor] = 4;
		m_gotoTable[33][NodeType::Identifier] = 3;
		m_gotoTable[33][NodeType::WhileStatement] = 12;
		m_gotoTable[33][NodeType::Term] = 13;
		m_gotoTable[33][NodeType::Literal] = 17;
		m_gotoTable[33][NodeType::Grouping] = 16;
		m_gotoTable[33][NodeType::Primary] = 18;
		m_gotoTable[33][NodeType::UnaryOp] = 20;
		m_gotoTable[33][NodeType::Call] = 21;
		m_gotoTable[33][NodeType::Unary] = 22;
		m_gotoTable[33][NodeType::Conditional] = 23;
		m_gotoTable[33][NodeType::Logical] = 24;
		m_gotoTable[33][NodeType::Expression] = 25;
		m_gotoTable[33][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[33][NodeType::Statement] = 28;
		m_gotoTable[33][NodeType::IfStatement] = 29;
		m_gotoTable[33][NodeType::ElseIfStatement] = 30;
		m_gotoTable[33][NodeType::ElseStatement] = 31;
		m_gotoTable[34][NodeType::Expression] = 62;
		m_gotoTable[34][NodeType::UnaryOp] = 20;
		m_gotoTable[34][NodeType::Term] = 13;
		m_gotoTable[34][NodeType::Identifier] = 53;
		m_gotoTable[34][NodeType::Literal] = 17;
		m_gotoTable[34][NodeType::Grouping] = 16;
		m_gotoTable[34][NodeType::Call] = 21;
		m_gotoTable[34][NodeType::Primary] = 18;
		m_gotoTable[34][NodeType::Unary] = 22;
		m_gotoTable[34][NodeType::Factor] = 4;
		m_gotoTable[34][NodeType::Conditional] = 23;
		m_gotoTable[34][NodeType::Logical] = 24;
		m_gotoTable[35][NodeType::Unary] = 63;
		m_gotoTable[35][NodeType::Identifier] = 53;
		m_gotoTable[35][NodeType::Literal] = 17;
		m_gotoTable[35][NodeType::Grouping] = 16;
		m_gotoTable[35][NodeType::Call] = 21;
		m_gotoTable[35][NodeType::Primary] = 18;
		m_gotoTable[35][NodeType::UnaryOp] = 20;
		m_gotoTable[38][NodeType::Expression] = 64;
		m_gotoTable[38][NodeType::UnaryOp] = 20;
		m_gotoTable[38][NodeType::Term] = 13;
		m_gotoTable[38][NodeType::Identifier] = 53;
		m_gotoTable[38][NodeType::Literal] = 17;
		m_gotoTable[38][NodeType::Grouping] = 16;
		m_gotoTable[38][NodeType::Call] = 21;
		m_gotoTable[38][NodeType::Primary] = 18;
		m_gotoTable[38][NodeType::Unary] = 22;
		m_gotoTable[38][NodeType::Factor] = 4;
		m_gotoTable[38][NodeType::Conditional] = 23;
		m_gotoTable[38][NodeType::Logical] = 24;
		m_gotoTable[39][NodeType::Expression] = 65;
		m_gotoTable[39][NodeType::UnaryOp] = 20;
		m_gotoTable[39][NodeType::Term] = 13;
		m_gotoTable[39][NodeType::Identifier] = 53;
		m_gotoTable[39][NodeType::Literal] = 17;
		m_gotoTable[39][NodeType::Grouping] = 16;
		m_gotoTable[39][NodeType::Call] = 21;
		m_gotoTable[39][NodeType::Primary] = 18;
		m_gotoTable[39][NodeType::Unary] = 22;
		m_gotoTable[39][NodeType::Factor] = 4;
		m_gotoTable[39][NodeType::Conditional] = 23;
		m_gotoTable[39][NodeType::Logical] = 24;
		m_gotoTable[41][NodeType::Expression] = 66;
		m_gotoTable[41][NodeType::UnaryOp] = 20;
		m_gotoTable[41][NodeType::Term] = 13;
		m_gotoTable[41][NodeType::Identifier] = 53;
		m_gotoTable[41][NodeType::Literal] = 17;
		m_gotoTable[41][NodeType::Grouping] = 16;
		m_gotoTable[41][NodeType::Call] = 21;
		m_gotoTable[41][NodeType::Primary] = 18;
		m_gotoTable[41][NodeType::Unary] = 22;
		m_gotoTable[41][NodeType::Factor] = 4;
		m_gotoTable[41][NodeType::Conditional] = 23;
		m_gotoTable[41][NodeType::Logical] = 24;
		m_gotoTable[43][NodeType::Factor] = 67;
		m_gotoTable[43][NodeType::Identifier] = 53;
		m_gotoTable[43][NodeType::Literal] = 17;
		m_gotoTable[43][NodeType::Grouping] = 16;
		m_gotoTable[43][NodeType::Call] = 21;
		m_gotoTable[43][NodeType::Primary] = 18;
		m_gotoTable[43][NodeType::UnaryOp] = 20;
		m_gotoTable[43][NodeType::Unary] = 22;
		m_gotoTable[45][NodeType::UnaryOp] = 20;
		m_gotoTable[45][NodeType::Term] = 68;
		m_gotoTable[45][NodeType::Identifier] = 53;
		m_gotoTable[45][NodeType::Literal] = 17;
		m_gotoTable[45][NodeType::Grouping] = 16;
		m_gotoTable[45][NodeType::Call] = 21;
		m_gotoTable[45][NodeType::Primary] = 18;
		m_gotoTable[45][NodeType::Unary] = 22;
		m_gotoTable[45][NodeType::Factor] = 4;
		m_gotoTable[54][NodeType::UnaryOp] = 20;
		m_gotoTable[54][NodeType::Arguments] = 70;
		m_gotoTable[54][NodeType::Term] = 13;
		m_gotoTable[54][NodeType::Identifier] = 53;
		m_gotoTable[54][NodeType::Literal] = 17;
		m_gotoTable[54][NodeType::Grouping] = 16;
		m_gotoTable[54][NodeType::Call] = 21;
		m_gotoTable[54][NodeType::Primary] = 18;
		m_gotoTable[54][NodeType::Unary] = 22;
		m_gotoTable[54][NodeType::Factor] = 4;
		m_gotoTable[54][NodeType::Conditional] = 23;
		m_gotoTable[54][NodeType::Logical] = 24;
		m_gotoTable[54][NodeType::Expression] = 71;
		m_gotoTable[56][NodeType::Conditional] = 72;
		m_gotoTable[56][NodeType::UnaryOp] = 20;
		m_gotoTable[56][NodeType::Term] = 13;
		m_gotoTable[56][NodeType::Identifier] = 53;
		m_gotoTable[56][NodeType::Literal] = 17;
		m_gotoTable[56][NodeType::Grouping] = 16;
		m_gotoTable[56][NodeType::Call] = 21;
		m_gotoTable[56][NodeType::Primary] = 18;
		m_gotoTable[56][NodeType::Unary] = 22;
		m_gotoTable[56][NodeType::Factor] = 4;
		m_gotoTable[59][NodeType::Block] = 61;
		m_gotoTable[59][NodeType::Factor] = 4;
		m_gotoTable[59][NodeType::Identifier] = 3;
		m_gotoTable[59][NodeType::WhileStatement] = 12;
		m_gotoTable[59][NodeType::Term] = 13;
		m_gotoTable[59][NodeType::Literal] = 17;
		m_gotoTable[59][NodeType::Grouping] = 16;
		m_gotoTable[59][NodeType::Primary] = 18;
		m_gotoTable[59][NodeType::UnaryOp] = 20;
		m_gotoTable[59][NodeType::Call] = 21;
		m_gotoTable[59][NodeType::Unary] = 22;
		m_gotoTable[59][NodeType::Conditional] = 23;
		m_gotoTable[59][NodeType::Logical] = 24;
		m_gotoTable[59][NodeType::Expression] = 25;
		m_gotoTable[59][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[59][NodeType::Statement] = 28;
		m_gotoTable[59][NodeType::IfStatement] = 29;
		m_gotoTable[59][NodeType::ElseIfStatement] = 30;
		m_gotoTable[59][NodeType::ElseStatement] = 31;
		m_gotoTable[67][NodeType::FactorOp] = 35;
		m_gotoTable[71][NodeType::ArgRecurse] = 78;
		m_gotoTable[74][NodeType::Block] = 80;
		m_gotoTable[74][NodeType::Factor] = 4;
		m_gotoTable[74][NodeType::Identifier] = 3;
		m_gotoTable[74][NodeType::WhileStatement] = 12;
		m_gotoTable[74][NodeType::Term] = 13;
		m_gotoTable[74][NodeType::Literal] = 17;
		m_gotoTable[74][NodeType::Grouping] = 16;
		m_gotoTable[74][NodeType::Primary] = 18;
		m_gotoTable[74][NodeType::UnaryOp] = 20;
		m_gotoTable[74][NodeType::Call] = 21;
		m_gotoTable[74][NodeType::Unary] = 22;
		m_gotoTable[74][NodeType::Conditional] = 23;
		m_gotoTable[74][NodeType::Logical] = 24;
		m_gotoTable[74][NodeType::Expression] = 25;
		m_gotoTable[74][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[74][NodeType::Statement] = 28;
		m_gotoTable[74][NodeType::IfStatement] = 29;
		m_gotoTable[74][NodeType::ElseIfStatement] = 30;
		m_gotoTable[74][NodeType::ElseStatement] = 31;
		m_gotoTable[75][NodeType::Block] = 81;
		m_gotoTable[75][NodeType::Factor] = 4;
		m_gotoTable[75][NodeType::Identifier] = 3;
		m_gotoTable[75][NodeType::WhileStatement] = 12;
		m_gotoTable[75][NodeType::Term] = 13;
		m_gotoTable[75][NodeType::Literal] = 17;
		m_gotoTable[75][NodeType::Grouping] = 16;
		m_gotoTable[75][NodeType::Primary] = 18;
		m_gotoTable[75][NodeType::UnaryOp] = 20;
		m_gotoTable[75][NodeType::Call] = 21;
		m_gotoTable[75][NodeType::Unary] = 22;
		m_gotoTable[75][NodeType::Conditional] = 23;
		m_gotoTable[75][NodeType::Logical] = 24;
		m_gotoTable[75][NodeType::Expression] = 25;
		m_gotoTable[75][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[75][NodeType::Statement] = 28;
		m_gotoTable[75][NodeType::IfStatement] = 29;
		m_gotoTable[75][NodeType::ElseIfStatement] = 30;
		m_gotoTable[75][NodeType::ElseStatement] = 31;
		m_gotoTable[76][NodeType::Block] = 82;
		m_gotoTable[76][NodeType::Factor] = 4;
		m_gotoTable[76][NodeType::Identifier] = 3;
		m_gotoTable[76][NodeType::WhileStatement] = 12;
		m_gotoTable[76][NodeType::Term] = 13;
		m_gotoTable[76][NodeType::Literal] = 17;
		m_gotoTable[76][NodeType::Grouping] = 16;
		m_gotoTable[76][NodeType::Primary] = 18;
		m_gotoTable[76][NodeType::UnaryOp] = 20;
		m_gotoTable[76][NodeType::Call] = 21;
		m_gotoTable[76][NodeType::Unary] = 22;
		m_gotoTable[76][NodeType::Conditional] = 23;
		m_gotoTable[76][NodeType::Logical] = 24;
		m_gotoTable[76][NodeType::Expression] = 25;
		m_gotoTable[76][NodeType::VarDeclareStatement] = 26;
		m_gotoTable[76][NodeType::Statement] = 28;
		m_gotoTable[76][NodeType::IfStatement] = 29;
		m_gotoTable[76][NodeType::ElseIfStatement] = 30;
		m_gotoTable[76][NodeType::ElseStatement] = 31;
		m_gotoTable[79][NodeType::Expression] = 83;
		m_gotoTable[79][NodeType::UnaryOp] = 20;
		m_gotoTable[79][NodeType::Term] = 13;
		m_gotoTable[79][NodeType::Identifier] = 53;
		m_gotoTable[79][NodeType::Literal] = 17;
		m_gotoTable[79][NodeType::Grouping] = 16;
		m_gotoTable[79][NodeType::Call] = 21;
		m_gotoTable[79][NodeType::Primary] = 18;
		m_gotoTable[79][NodeType::Unary] = 22;
		m_gotoTable[79][NodeType::Factor] = 4;
		m_gotoTable[79][NodeType::Conditional] = 23;
		m_gotoTable[79][NodeType::Logical] = 24;
		m_gotoTable[83][NodeType::ArgRecurse] = 84;
		m_grammar[0] = { NodeType::File, 1, 1, false };
		m_grammar[1] = { NodeType::Statements, 2, 2, false };
		m_grammar[2] = { NodeType::Statements, 1, 1, false };
		m_grammar[3] = { NodeType::Block, 3, 1, false };
		m_grammar[4] = { NodeType::Block, 2, 1, false };
		m_grammar[5] = { NodeType::Block, 1, 1, false };
		m_grammar[6] = { NodeType::Block, 1, 1, false };
		m_grammar[7] = { NodeType::Block, 1, 1, false };
		m_grammar[8] = { NodeType::Block, 1, 1, false };
		m_grammar[9] = { NodeType::Statement, 1, 1, false };
		m_grammar[10] = { NodeType::Statement, 1, 1, false };
		m_grammar[11] = { NodeType::VarDeclareStatement, 3, 2, false };
		m_grammar[12] = { NodeType::WhileStatement, 5, 2, false };
		m_grammar[13] = { NodeType::IfStatement, 5, 2, false };
		m_grammar[14] = { NodeType::ElseIfStatement, 5, 2, false };
		m_grammar[15] = { NodeType::ElseStatement, 2, 1, false };
		m_grammar[16] = { NodeType::Expression, 1, 1, false };
		m_grammar[17] = { NodeType::Logical, 3, 3, false };
		m_grammar[18] = { NodeType::Logical, 1, 1, false };
		m_grammar[19] = { NodeType::LogicalOp, 1, 0, true };
		m_grammar[20] = { NodeType::LogicalOp, 1, 0, true };
		m_grammar[21] = { NodeType::Conditional, 3, 3, false };
		m_grammar[22] = { NodeType::Conditional, 1, 1, false };
		m_grammar[23] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[24] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[25] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[26] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[27] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[28] = { NodeType::ConditionalOp, 1, 0, true };
		m_grammar[29] = { NodeType::Term, 3, 3, false };
		m_grammar[30] = { NodeType::Term, 1, 1, false };
		m_grammar[31] = { NodeType::TermOp, 1, 0, true };
		m_grammar[32] = { NodeType::TermOp, 1, 0, true };
		m_grammar[33] = { NodeType::Factor, 3, 3, false };
		m_grammar[34] = { NodeType::Factor, 1, 1, false };
		m_grammar[35] = { NodeType::FactorOp, 1, 0, true };
		m_grammar[36] = { NodeType::FactorOp, 1, 0, true };
		m_grammar[37] = { NodeType::Unary, 2, 2, false };
		m_grammar[38] = { NodeType::Unary, 1, 1, false };
		m_grammar[39] = { NodeType::UnaryOp, 1, 0, true };
		m_grammar[40] = { NodeType::UnaryOp, 1, 0, true };
		m_grammar[41] = { NodeType::Call, 4, 2, false };
		m_grammar[42] = { NodeType::Call, 1, 1, false };
		m_grammar[43] = { NodeType::Arguments, 0, 0, true };
		m_grammar[44] = { NodeType::Arguments, 2, 2, false };
		m_grammar[45] = { NodeType::ArgRecurse, 0, 0, true };
		m_grammar[46] = { NodeType::ArgRecurse, 3, 2, false };
		m_grammar[47] = { NodeType::Primary, 1, 1, false };
		m_grammar[48] = { NodeType::Primary, 1, 1, false };
		m_grammar[49] = { NodeType::Primary, 1, 1, false };
		m_grammar[50] = { NodeType::Grouping, 3, 1, false };
		m_grammar[51] = { NodeType::Literal, 1, 0, true };
		m_grammar[52] = { NodeType::Literal, 1, 0, true };
		m_grammar[53] = { NodeType::Identifier, 1, 0, true };
		m_grammar[54] = { NodeType::Literal, 1, 0, true };
	}
	Node parse(std::vector<Token> tokens)
	{
		std::queue<Token, std::deque<Token>> input(std::deque<Token>(tokens.begin(), tokens.end()));
		std::stack<int> stack;
		stack.push(0);
		std::stack<Node> output;
		Token beforeToken = input.front();
		int state = 0;
		while (true)
		{
			state = stack.top();
			Token& current = input.front();
			Action& nextAction = m_actionTable[state][current.type];
			if (nextAction.type == ActionType::None)
			{
				if (current.type == TokenType::_EOF)
					std::cout << "Unexpected end of file at line " << current.line << " at pos " << current.pos << std::endl;
				else
					std::cout << "Error parsing line " << current.line << " at pos " << current.pos << std::endl;
				exit(-2);
			}
			else if (nextAction.type == ActionType::Shift)
			{
				beforeToken = input.front();
				input.pop();
				stack.push(nextAction.value);
			}
			else if (nextAction.type == ActionType::Reduce)
			{
				// Push the rule to the stack
				Production production = m_grammar[nextAction.value - 1];
				for (int i = 0; i < production.rhs; i++)
					stack.pop();
				stack.push(m_gotoTable[stack.top()][production.lhs]);
				Node node;
				node.terminal = production.terminates;
				node.type = production.lhs;
				if (production.terminates)
					node.token = beforeToken;
				else
				{
					for (int i = 0; i < production.rhsNodes; i++)
					{
						node.children.push_back(output.top());
						output.pop();
					}
				}
				output.push(node);
			}
			else if (nextAction.type == ActionType::Accept)
			{
				break;
			}
		}
		Node root = output.top();
		std::stack<Node*> toReverse({ &root });
		while (!toReverse.empty())
		{
			Node* node = toReverse.top();
			toReverse.pop();
			for (Node& child : node->children)
				toReverse.push(&child);
			std::reverse(node->children.begin(), node->children.end());
		}
		return root;
	}
private:
	Production m_grammar[GRAMMAR_NUM];
	std::unordered_map<TokenType, Action> m_actionTable[SET_NUM];
	std::unordered_map<NodeType, int> m_gotoTable[SET_NUM];
};
